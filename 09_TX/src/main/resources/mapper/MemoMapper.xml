<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.Domain.Common.Mapper.MemoMapper">

    <insert id ="insertXML">
        insert into tbl_memo values(#{id},#{text},#{writer},#{createAt})
    </insert>

    <update id = "updateXML">
        <!-- updata tbl_memo set 바꿀컬럼명=값,바꿀컬럼명=값 where 기본키열=? -->
        update tbl_memo set text=#{text},writer=#{writer} where id=#{id}
    </update>
    <delete id="deleteXML">
        delete from tbl_memo where id=#{id}
    </delete>

    <!--select부터 resultType이랑 함수의 파라미터 자료형을 넣어줘야함.  파라미터는 단위, 리설트타입에는 DTO 경로-->
    <select id = "selectXML" resultType="com.example.demo.Domain.Common.Dto.MemoDto" parameterType="long">
        select * from tbl_memo where id=#{id}
    </select>

    <select id="selectAllXML" resultType="com.example.demo.Domain.Common.Dto.MemoDto">
        select * from tbl_memo
    </select>

    <select id="selectAllMapXML" resultType="java.util.Map">
        select * from tbl_memo
    </select>

    <select id ="selectAllIfXML" resultType="java.util.Map" parameterType="java.util.Map">
        select * from tbl_memo
        <if test="type!=null and type.equals('text')"> <!-- 입력된 type이 null이 아니도 text라면  -->
            where text like concat('%',#{keyword},'%') <!-- where 조건절. 검색어를 포함하는 조건절 추가 (LIKE '%검색어%') -->
        </if>
    </select>

    <select id ="selectAllChooseXML" resultType="java.util.Map" parameterType="java.util.Map">
        select * from tbl_memo
        <where>
            <if test="field !=null and field.size > 0">
                <choose>
                    <when test="type=='id'">
                        id like concat('%',#{keyword},'%')
                    </when>
                    <when test="type=='text'">
                         text like concat('%',#{keyword},'%')
                    </when>
                    <when test="type=='writer'">
                         writer like concat('%',#{keyword},'%')
                    </when>
                    <otherwise> <!-- 그외 나머지라는 뜻 -->
                        createAt like concat('%',#{keyword},'%')
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>

    <select id ="selectAllIfAndXML" resultType="java.util.Map" parameterType="java.util.Map">
        select * from tbl_memo
        <where>
            <if test="field !=null">
                    <if test="type.contains('id')">
                        id like concat('%',#{keyword},'%')
                    </if>
                    <if test="type.contains('text')">
                        <if test="type.contains('id')">AND</if>
                        text like concat('%',#{keyword},'%')
                    </if>
                    <if test="type.contains('writer')">
                        <if test="(type.contains('id')) or (type.contains('text'))">AND</if>
                        writer like concat('%',#{keyword},'%')
                    </if>
            </if>
        </where>
    </select>

    <select id="selectForEachAnd" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT * FROM tbl_memo
        <where>
            <if test="fields != null and keyword != null">
                <foreach collection="fields" item="f" separator="AND">
                    <choose>
                        <when test="f == 'id'">
                            id LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="f == 'text'">
                            text LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="f == 'writer'">
                            writer LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </foreach>
            </if>
        </where>
    </select>


</mapper>